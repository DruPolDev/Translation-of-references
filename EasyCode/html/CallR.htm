<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252"><title>CallR / RetR / CallRA / RetRA</title>

</head>
<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">
<p><a name="align"></a><b><font color="#004080" face="Arial" size="6"><font color="#800080">CallR</font> / <font color="#800080">RetR</font> /
<font color="#800080">CallRA</font> / <font color="#800080">RetRA</font>
(only 64-bit ASMC, JWASM, MASM, POASM and UASM projects)</font></b></p>
<hr>
<p><font face="Arial" size="2">As the <font color="#ff0000"><b>Retn</b></font>
instruction is not
supported by the 64-bit MASM compiler (<b>ml64</b>),
<b>H&eacute;ctor A. Medina</b> has developed four Easy
Code
built-in pseudo-opcodes, <font color="#800080"><b>CallR</b></font>
/
<font color="#800080"><b>RetR</b></font>
/
<font color="#800080"><b>CallRA</b></font>
and
<font color="#800080"><b>RetRA</b></font>,
which work like <font color="#ff0000"><b>Call</b></font>
and <font color="#ff0000"><b>Retn</b></font>
respectively. These pseudo-opcodes are used in the following way:
<font face="Courier New" size="2"><br>
<br>
<b>wndMainProcedure <font color="#0000ff">Proc</font>
hWnd<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
uMsg<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
wParam<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
lParam<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
hWnd<font color="#ff00ff">,</font> <font color="#808000">Rcx</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
uMsg<font color="#ff00ff">,</font> <font color="#808000">Rdx</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
wParam<font color="#ff00ff">,</font> <font color="#808000">R8</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
lParam<font color="#ff00ff">,</font> <font color="#808000">R9</font><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#800080">CallR</font>
Label<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">;RetR
returns here</font>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Ret</font>
<br>
<br>
Label:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#800080">RetR</font><br>
<font color="#000000">wndMainProcedure</font> <font color="#0000ff">EndP</font><br>
</b></font><br>
<br>
Besides, <font color="#800080"><b>CallR</b></font>
and <font color="#800080"><b>CallRA</b></font>
accept an <b>OPTIONAL</b> second argument as the return
address:
<font face="Courier New" size="2"><br>
<br>
<b>wndMainProcedure <font color="#0000ff">Proc</font>
hWnd<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
uMsg<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
wParam<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><font color="#ff00ff">,</font>
lParam<font color="#ff00ff">:</font><font color="#0000ff">QWORD</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
hWnd<font color="#ff00ff">,</font> <font color="#808000">Rcx</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
uMsg<font color="#ff00ff">,</font> <font color="#808000">Rdx</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
wParam<font color="#ff00ff">,</font> <font color="#808000">R8</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Mov</font>
lParam<font color="#ff00ff">,</font> <font color="#808000">R9</font><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#800080">CallR</font>
Label<font color="#ff00ff">,</font> RetAddr<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">;Code
line</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">;Code
line</font><br>
<br>
RetAddr:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#808080">;RetR
returns here</font>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">Ret</font>
<br>
<br>
Label:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#800080">RetR</font><br>
<font color="#000000">wndMainProcedure</font> <font color="#0000ff">EndP</font><br>
</b></font><br>
<br>
The 64-bit <b>ECClock</b> MASM example, in the
<b>EasyCode\Examples\Masm\x64</b> folder, uses
<font color="#800080"><b>CallR</b></font>
and <font color="#800080"><b>RetR</b></font>.</font></p>
<p><font face="Arial" size="2"><br>
<b>IMPORTANT</b>: In the examples
above, you can use <font color="#800080"><b>CallR</b></font>
/ <font color="#800080"><b>RetR</b></font>
or <font color="#800080"><b>CallRA</b></font>
/
<font color="#800080"><b>RetRA</b></font>
indistinctly, but
<b>take into account</b> that <font color="#800080"><b>CallRA</b></font>
/
<font color="#800080"><b>RetRA</b></font>
keep the stack aligned,
while <font color="#800080"><b>CallR</b></font>
/ <font color="#800080"><b>RetR</b></font>
<b>DO NOT</b>.</font></p>
<p><font face="Arial" size="2"><font face="Arial" size="2">
<b>WARNING</b>: <font color="#800080"><b>RetR</b></font>
and <font color="#800080"><b>RetRA</b></font>
modify the <font color="#808000"><b>Rax</b></font>
register.</font></font></p>
<p><font face="Arial" size="2"><font face="Arial" size="2"><b>
REMARKS</b>: <font color="#800080"><b>CallR</b></font>,
<font color="#800080"><b>RetR</b></font>,
<font color="#800080"><b>CallRA</b></font>
and <font color="#800080"><b>RetRA</b></font>
are only available for 64-bit ASMC, JWASM, MASM, POASM and UASM
projects. Despite the <font color="#ff0000"><b>Retn</b></font>
instruction <b>is supported</b> by the 64-bit ASMC, JWASM,
POASM
and UASM compilers, <font color="#800080"><b>CallR</b></font>,
<font color="#800080"><b>RetR</b></font>,
<font color="#800080"><b>CallRA</b></font>
and
<font color="#800080"><b>RetRA</b></font>
are also available as a
complement.<br>
<br>
</font></font></p>
</body></html>