<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Symbols"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Symbols</title>

<meta name="MS-HAID" content="Engine_Overview_fcf0ebc7-625b-461f-ae21-83c8937ff68f.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.symbols4"></a>Symbols</h1>
</div>
<p>A <i>symbol</i> is a named unit of data or code from a source file that appears in a module.  Information about symbols can include the name, type (if applicable), the address or register where it is stored, and any parent or child symbols.  Examples of symbols include variables (local and global), functions, and any entry point into a module.</p>
<p>The symbol information is used by the engine to help interpret data and code in the target.  With this information, the engine can search for symbols by name or location in memory and provide a description of a symbol.</p>
<p>The engine gets its information about symbols from symbol files, which are located on the local file system or loaded from a symbol server.  When using a symbol server, the engine will automatically use the correct version of the symbol file to match the module in the target.  Symbol files can be loaded whenever the corresponding module is loaded, or they can be loaded as needed.</p>
<div class="alert"><b>Note</b>    Often optimizing compilers do not include accurate information in symbol files.  This can cause the engine to misinterpret the value of some variables as the variable's location or lifetime might be incorrectly described, causing the engine to look at the wrong piece of memory or think a variable value is live when it is dead (or vice versa).  It is also possible for an optimizing compiler to change the order of execution or to split a function into several pieces.  Best results are usually obtained when debugging unoptimized code.</div>
<div> </div>
<h3><a id="additional_information"></a><a id="ADDITIONAL_INFORMATION"></a>Additional Information</h3>
<p>For details about using symbols, see <a href="using_symbols.htm">Using Symbols</a>.  For an overview of using symbol files and symbol servers, see <a href="symbols.htm">Symbols</a> in the Debuggers section of this documentation.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Symbols%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
