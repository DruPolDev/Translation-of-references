<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="The DEBUG_STACK_FRAME structure describes a stack frame and the address of the current instruction for the stack frame."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>DEBUG_STACK_FRAME structure</title>

<meta name="MS-HAID" content="Structures_219fad76-6f80-429d-b0ff-0f5443a9263b.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.debug_stack_frame"></a>DEBUG_STACK_FRAME structure</h1>
</div>
<p>The DEBUG_STACK_FRAME structure describes a stack frame and the address of the current instruction for the stack frame. </p>
<h2>Syntax</h2>
<div class="code"><span codelanguage="ManagedCPlusPlus"><table>
<tr>
<th>C++</th>
</tr>
<tr>
<td>
<pre>typedef struct _DEBUG_STACK_FRAME {
  ULONG64 InstructionOffset;
  ULONG64 ReturnOffset;
  ULONG64 FrameOffset;
  ULONG64 StackOffset;
  ULONG64 FuncTableEntry;
  ULONG64 Params[4];
  ULONG64 Reserved[6];
  BOOL    Virtual;
  ULONG   FrameNumber;
} DEBUG_STACK_FRAME, *PDEBUG_STACK_FRAME;</pre>
</td>
</tr>
</table></span></div>
<h2>Members</h2>
<dl>
<dt><b>InstructionOffset</b></dt>
<dd>
<p>The location in the process's virtual address space of the related instruction for the stack frame.  This is typically the return address for the next stack frame, or the current instruction pointer if the frame is at the top of the stack.  </p>
</dd>
<dt><b>ReturnOffset</b></dt>
<dd>
<p>The location in the process's virtual address space of the return address for the stack frame.  This is typically the related instruction for the previous stack frame.</p>
</dd>
<dt><b>FrameOffset</b></dt>
<dd>
<p>The location in the process's virtual address space of the stack frame, if known.  Some processor architectures do not have a frame or have more than one.  In these cases, the engine chooses a value most representative for the given level of the stack.</p>
</dd>
<dt><b>StackOffset</b></dt>
<dd>
<p>The location in the process's virtual address space of the processor stack.</p>
</dd>
<dt><b>FuncTableEntry</b></dt>
<dd>
<p>The location in the target's virtual address space of the function entry for this frame, if available. When set, this pointer is not guaranteed to remain valid indefinitely and should not be held for future use.  Instead, save the value of <b>InstructionOffset</b> and use it with <a href="getfunctionentrybyoffset.htm"><b>IDebugSymbols3::GetFunctionEntryByOffset</b></a> to retrieve function entry information later. </p>
</dd>
<dt><b>Params</b></dt>
<dd>
<p>The values of the first four stack slots that are passed to the function, if available.  If there are less than four arguments, the remaining entries are set to zero.  These stack slots are not guaranteed to contain parameter values.  Some calling conventions and compiler optimizations might interfere with identification of parameter information.  For more detailed argument information and proper location handling, use <a href="getscopesymbolgroup.htm"><b>IDebugSymbols::GetScopeSymbolGroup</b></a> to retrieve the actual parameter symbols.</p>
</dd>
<dt><b>Reserved</b></dt>
<dd>
<p>Reserved for future use.</p>
</dd>
<dt><b>Virtual</b></dt>
<dd>
<p>The value is set to <b>TRUE</b> if this stack frame was generated by the debugger by unwinding.  Otherwise, the value is <b>FALSE</b> if it was formed from a thread's current context.  Typically, this is <b>TRUE</b> for the frame at the top of the stack, where <b>InstructionOffset</b> is the current instruction pointer.</p>
</dd>
<dt><b>FrameNumber</b></dt>
<dd>
<p>The index of the frame.  This index counts the number of frames from the top of the call stack.  The frame at the top of the stack, representing the current call, has index zero.</p>
</dd>
</dl>
<h2>Requirements</h2>
<table>
<tr>
<th width="30%">
<p>Header</p>
</th>
<td width="70%">
<dl>
<dt>DbgEng.h (include DbgEng.h)</dt>
</dl>
</td>
</tr>
</table>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20DEBUG_STACK_FRAME structure%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
