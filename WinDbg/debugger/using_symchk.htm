<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Using SymChk"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Using SymChk</title>

<meta name="MS-HAID" content="SymChk_1bdef4f2-1b94-46b4-b5e4-a0cbb8670338.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.using_symchk"></a>Using SymChk</h1>
</div>
<h2><a id="ddk_using_symchk_dtoolq"></a><a id="DDK_USING_SYMCHK_DTOOLQ"></a></h2>
<p>The basic syntax for SymChk is as follows:</p>
<pre class="syntax" xml:space="preserve"><code>symchk [/r] FileNames /s SymbolPath </code></pre>
<p><i>FileNames</i> specifies one or more program files whose symbols are needed. If <i>FileNames</i> is a directory and the <b>/r</b> flag is used, this directory is explored recursively, and SymChk will try to find symbols for all program files in this directory tree. <i>SymbolPath</i> specifies where SymChk is to search for symbols.</p>
<p>There are many more command-line options. For a full listing, see <a href="symchk_command_line_options.htm"><b>SymChk Command-Line Options</b></a>.</p>
<p>The symbol path specified can include any number of local directories, UNC directories, or symbol servers. Local directories and UNC directories are <u>not</u> searched recursively. Only the specified directory and a subdirectory based on the executable's extension are searched. For example, the query</p>
<pre class="syntax" xml:space="preserve"><code>symchk thisdriver.sys /s g:\symbols </code></pre>
<p>will search g:\mysymbols and g:\mysymbols\sys.</p>
<p>You can specify a symbol server by using either of the following syntaxes as part of your symbol path:</p>
<pre class="syntax" xml:space="preserve"><code>srv*DownstreamStore*\\Server\Share
srv*\\Server\Share</code></pre>
<p>This is very similar to using a symbol server in the debugger's symbol path. For details on this, see <a href="symbol_stores_and_symbol_servers.htm">Using Symbol Servers and Symbol Stores</a>.</p>
<p>If a downstream store is specified, SymChk will make copies of all valid symbol files found by the symbol server and place them in the downstream store. Only symbol files that are complete matches are copied downstream.</p>
<p>SymChk always searches the downstream store <u>before</u> querying the symbol server. Therefore you should be careful about using a downstream store when someone else is maintaining the symbol store. If you run SymChk once and it finds symbol files, it will copy those to the downstream store. If you then run SymChk again after these files have been altered or deleted on the symbol store, SymChk will not notice this fact, since it will find what it is looking for on the downstream store and look no further.</p>
<div class="alert"><b>Note</b>    SymChk always uses SymSrv (Symsrv.dll) as its symbol server DLL. On the other hand, the debuggers can choose a symbol server DLL other than SymSrv if one is available. (SymSrv is the symbol server included in the Debugging Tools for Windows package.)</div>
<div> </div>
<h3><a id="Using_SymChk_to_determine_whether_symbols_are_private_or_public"></a><a id="using_symchk_to_determine_whether_symbols_are_private_or_public"></a><a id="USING_SYMCHK_TO_DETERMINE_WHETHER_SYMBOLS_ARE_PRIVATE_OR_PUBLIC"></a>Using SymChk to determine whether symbols are private or public</h3>
<p>To determine whether a symbol file is private or public, use the <b>/v</b> parameter so that SymChk displays verbose output. Suppose MyApp.exe and MyApp.pdb are in the folder c:\sym. Enter this command.</p>
<p><b>symchk /v c:\sym\MyApp.exe /s c:\sym</b></p>
<p>If MyApp.pdb contains private symbols, the output of SymChk looks like this.</p>
<pre class="syntax" xml:space="preserve"><code>[SYMCHK] Searching for symbols to c:\sym\MyApp.exe in path c:\sym
...
DBGHELP: MyApp - private symbols &amp; lines
        c:\sym\MyApp.pdb
...
SYMCHK: FAILED files = 0
SYMCHK: PASSED + IGNORED files = 1</code></pre>
<p>If MyApp.pdb contains only public symbols, the output of SymChk looks like this.</p>
<pre class="syntax" xml:space="preserve"><code>[SYMCHK] Searching for symbols to c:\sym\MyApp.exe in path c:\sym
...
DBGHELP: MyApp - public symbols
        c:\sym\MyApp.pdb
...
SYMCHK: FAILED files = 0
SYMCHK: PASSED + IGNORED files = 1</code></pre>
<p>To limit your search so that it finds only public symbol files, use the <b>s</b> option with the <b>/s</b> parameter (<b>/ss</b>). The following command finds a match if MyApp.pdb contains only public symbols. It does not find a match if MyApp.pdb contains private symbols.</p>
<p><b>symchk /v c:\sym\MyApp.exe /ss c:\sym</b></p>
<p>For more information, see <a href="public_and_private_symbols.htm">Public and Private Symbols</a>.</p>
<h3><a id="examples"></a><a id="EXAMPLES"></a>Examples</h3>
<p>Here are some examples. The following command searches for symbols for the program Myapp.exe:</p>
<pre class="syntax" xml:space="preserve"><code>e:\debuggers&gt; symchk f:\myapp.exe /s f:\symbols\applications 

SYMCHK: Myapp.exe           FAILED  - Myapp.pdb is missing

SYMCHK: FAILED files = 1
SYMCHK: PASSED + IGNORED files = 0</code></pre>
<p>You can try again with a different symbol path:</p>
<pre class="syntax" xml:space="preserve"><code>e:\debuggers&gt; symchk f:\myapp.exe /s f:\symbols\newdirectory 

SYMCHK: FAILED files = 0
SYMCHK: PASSED + IGNORED files = 1</code></pre>
<p>The search was successful this time. If the verbose option is not used, SymChk will only list files for which it failed to find symbols. So in this example no files were listed. You can tell that the search succeeded because there is now one file listed in the "passed" category and none in the "failed" category.</p>
<p>A program file is ignored if it contains no executable code. Many resource files are of this type.</p>
<p>If you prefer to see the file names of <u>all</u> program files, you can use the <b>/v</b> option to generate verbose output:</p>
<pre class="syntax" xml:space="preserve"><code>e:\debuggers&gt; symchk /v f:\myapp.exe /s f:\symbols\newdirectory 

SYMCHK: MyApp.exe           PASSED

SYMCHK: FAILED files = 0
SYMCHK: PASSED + IGNORED files = 1</code></pre>
<p>The following command searches for a huge number of Windows symbols in a symbol server. There are a great variety of possible error messages:</p>
<pre class="syntax" xml:space="preserve"><code>e:\debuggers&gt; symchk /r c:\windows\system32 /s srv*\\manysymbols\windows 

SYMCHK: msisam11.dll         FAILED  - MSISAM11.pdb is missing
SYMCHK: msuni11.dll          FAILED  - msuni11link.pdb is missing
SYMCHK: msdxm.ocx            FAILED  - Image is split correctly, but msdxm.dbg i
s missing
SYMCHK: expsrv.dll           FAILED  - Checksum doesn't match with expsrv.DBG
SYMCHK: imeshare.dll         FAILED  - imeshare.opt.pdb is missing
SYMCHK: ir32_32.dll          FAILED  - Built with no debugging information
SYMCHK: author.dll           FAILED  - rpctest.pdb is missing
SYMCHK: msvcrt40.dll         FAILED  - Built with no debugging information
......
SYMCHK: FAILED files = 211
SYMCHK: PASSED + IGNORED files = 4809</code></pre>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Using SymChk%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
