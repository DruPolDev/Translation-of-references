<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="When you write an analysis extension plug-in, you also write a metadata file that describes the situations for which you want your plug-in to be called. When the !analyze debugger command runs, it uses metadata files to determine which plug-ins to load."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Metadata Files for Analysis Extension Plug-ins</title>



<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.metadata_files_for_analysis_extensions"></a>Metadata Files for Analysis Extension Plug-ins</h1>
</div>
<p>When you write an analysis extension plug-in, you also write a metadata file that describes the situations for which you want your plug-in to be called. When the <a href="_analyze.htm"><b>!analyze</b></a> debugger command runs, it uses metadata files to determine which plug-ins to load.</p>
<p>Create a metadata file that has the same name as your analysis extension plug-in and an extension of .alz.  For example, if your analysis extension plug-in is named MyAnalyzer.dll, your metadata file must be named MyAnalyzer.alz. Place the metadata file in the same directory as your analysis extension plug-in. </p>
<p>A metadata file for an analysis extension plug-in is an ASCII text file that contains key-value pairs. Keys and values are separated by white space. A key can have any non-whitespace character. Keys are not case sensitive. </p>
<p>After the key and the following white space, the corresponding value begins. A value can have one of the following forms.</p>
<ul>
<li>
<p>Any set of characters to the end of the line. This form works for values that do not contain any newline characters.</p>
<div class="alert"><b>Important</b>  If the last value in the metadata file has a value of this form, the line must end with a newline character.</div>
<div> </div>
</li>
<li>
<p>Any set of characters between braces { }. The form works for values that contain newline characters.</p>
</li>
</ul>
<p>A line beginning with # is a comment and is ignored. Comments can start only where keys are expected.</p>
<p>You can use the following keys in a metadata file.</p>
<table>
<tr>
<th>Key</th>
<th>Description</th>
</tr>
<tr>
<td>PluginId</td>
<td>String - Identifies the plug-in.</td>
</tr>
<tr>
<td>DebuggeeClass</td>
<td>String - Possible values are “Kernel” and "User". Indicates that the plug-in is interested in analyzing only kernel-mode failures or only user-mode failures.</td>
</tr>
<tr>
<td>BugCheckCode</td>
<td>32-bit bug check code - Indicates that the plug-in is interested in analyzing this <a href="bug_check_code_reference2.htm">bug check code</a>.  A single metadata file can specify multiple bug check codes.</td>
</tr>
<tr>
<td>ExceptionCode</td>
<td>32-bit exception code - Indicates that the plug-in is interested in analyzing this <a href="http://go.microsoft.com/fwlink/p?LinkID=282670">exception code</a>.  A single metadata file can specify multiple exception codes.</td>
</tr>
<tr>
<td>ExecutableName</td>
<td>String - Indicates that the plug-in is interested only in sessions where this is the running executable of the process to be analyzed.  A single metadata file can specify multiple executable names.</td>
</tr>
<tr>
<td>ImageName</td>
<td>String - Indicates that the plug-in is only interested only in sessions where the default analysis considers this image (dll, sys, or exe) to be at fault. The plug-in is invoked after analysis has determined which image is at fault. A single metadata file can specify multiple image names.</td>
</tr>
<tr>
<td>MaxTagCount</td>
<td>Integer - The maximum number of custom tags that the plug-in needs. Custom tags are tags other than the ones defined in extsfns.h.</td>
</tr>
</table>
<p> </p>
<h2><a id="Example_Metadata_Files"></a><a id="example_metadata_files"></a><a id="EXAMPLE_METADATA_FILES"></a>Example Metadata Files</h2>
<p>The following metadata file describes a plug-in that is interested in analyzing  bug check code 0xE2. (Recall that the last line must end with a newline character.)</p>
<pre class="syntax" xml:space="preserve"><code>PluginId      MyPlugin
DebuggeeClass Kernel
BugCheckCode  0xE2

</code></pre>
<p>The following metadata file describes a plug-in that is interested in analyzing bug checks 0x8, 0x9, and 0xA if MyDriver.sys is considered to be the module at fault.</p>
<pre class="syntax" xml:space="preserve"><code>PluginId      MyPlugin
DebuggeeClass Kernel
BugCheckCode  0x8
BugCheckCode  0x9
BugCheckCode  0xA
ImageName     MyDriver.sys

</code></pre>
<p>The following metadata file describes a plug-in that is interested in analyzing exception code 0xC0000005 if MyApp.exe is the running executable of the process being analyzed. Also, the plug-in might create as many as three custom tags.</p>
<pre class="syntax" xml:space="preserve"><code>PluginId        MyPlugin
DebuggeeClass   User
ExceptionCode   0xC0000005
ExecutableName  MyApp.exe

</code></pre>
<p>Debugging Tools for Windows has a sample that you can use to build a debugger extension module named dbgexts.dll. This extension module implements several debugger extension commands, but it can also serve as an analysis extension plug-in; that is, it exports an <a href="_efn_analyze.htm"><b>_EFN_Analyze</b></a> function. Here is a metadata file that describes  dbgexts.dll as an analysis extension plug-in.</p>
<pre class="syntax" xml:space="preserve"><code>PluginId      	PluginSample
DebuggeeClass 	User
ExceptionCode 	0xc0000005
ExecutableName  	cdb.exe
ExecutableName  	windbg.exe
#
# Custom tag descriptions 
#
TagDesc       	0xA0000000 	SAMPLE_PLUGIN_DEBUG_TEXT 	{Sample debug
help text from plug-in analysis}
#
</code></pre>
<h2><a id="related_topics"></a>Related topics</h2>
<dl>
<dt><a href="writing_an_analysis_extension_to_extend__analyze.htm">Writing an Analysis Extension Plug-in to Extend !analyze</a></dt>
<dt><a href="_efn_analyze.htm"><b>_EFN_Analyze</b></a></dt>
<dt><a href="_analyze.htm"><b>!analyze</b></a></dt>
</dl>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Metadata Files for Analysis Extension Plug-ins%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
