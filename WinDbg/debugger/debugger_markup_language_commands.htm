<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Debugger commands can provide output in plain text or in an enhanced format that uses Debugger Markup Language (DML). Output that is enhanced with DML includes links that you can click to execute related commands."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Using Debugger Markup Language</title>



<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.debugger_markup_language_commands"></a>Using Debugger Markup Language</h1>
</div>
<p>Debugger commands can provide output in plain text or in an enhanced format that uses Debugger Markup Language (DML). Output that is enhanced with DML includes links that you can click to execute related commands.</p>
<p>DML is available in Windows 10 and later.</p>
<p><b>DML Capable Commands</b></p>
<p>The following commands are capable of generating DML output:</p>
<ul>
<li><a href="_dml_start.htm"><b>.dml_start</b></a></li>
<li><a href="_dml_flow.htm"><b>.dml_flow</b></a></li>
<li><a href="_dml_proc.htm"><b>!dml_proc</b></a></li>
<li><a href="lm__list_loaded_modules_.htm"><b>lmD</b></a></li>
<li><a href="k__kb__kc__kd__kp__kp__kv__display_stack_backtrace_.htm"><b>kM</b></a></li>
<li><a href="_chain__list_debugger_extensions_.htm"><b>.chain /D</b></a></li>
<li><a href="_help__meta_command_help_.htm"><b>.help /D</b></a></li>
<li><a href="_printf.htm"><b>.printf /D</b></a></li>
</ul>
<p>The <a href="lm__list_loaded_modules_.htm"><b>lmD</b></a> command is an example of a command that is capable of providing DML output. The <b>lmD</b> command displays a list of loaded modules. As the following image shows,  each module name is a link that you can click to get more detailed information about the module.</p><img src="images/DmlCommands01.png" alt="Screen shot of lmD output"/><p>The following image shows the result of clicking the <b>usbuhci</b> link. The output includes additional links that enable you to explore further details of the usbuhci module.</p><img src="images/DmlCommands02.png" alt="Screen shot of module details"/><p><b>Turning DML On and Off </b></p>
<p>The <a href="_prefer_dml.htm"><b>.prefer_dml</b></a> command turns DML on or off. When DML is turned on (.prefer_dml 1), commands that are capable of generating DML output will generate DML output by default.</p>
<h3><a id="Console_Enhancements"></a><a id="console_enhancements"></a><a id="CONSOLE_ENHANCEMENTS"></a>Console Enhancements</h3>
<p>All of the Windows debuggers now have command output areas which support DML parsing.  In windbg the command window supports all DML behavior and will show colors, font styles and links.  The console debuggers, ntsd, cdb and kd, only support the color attributes of DML, and the only when running in a true console with color mode enabled.  Debuggers with redirected I/O, ntsd –d or remote.exe sessions will not display any colors.</p>
<h3><a id="Console_Debugger_Color_Mode"></a><a id="console_debugger_color_mode"></a><a id="CONSOLE_DEBUGGER_COLOR_MODE"></a>Console Debugger Color Mode</h3>
<p>The console debuggers, ntsd, cdb and kd now have the ability to display colored output when running in a true console.  This is not the default, it requires color mode to be explicitly enabled via tools.ini.  The new col_mode &lt;true|false&gt; token in tools.ini controls the color mode setting. For more information about working with the tools.ini file, see <a href="configuring_tools_ini.htm">Configuring tools.ini</a></p>
<p>When color mode is enabled the debugger can produce colored output.  By default most colors are not set and instead default to the current console colors.  </p>
<h3><a id="_Windbg_Command_Browser_Window"></a><a id="_windbg_command_browser_window"></a><a id="_WINDBG_COMMAND_BROWSER_WINDOW"></a> Windbg Command Browser Window</h3>
<p>In Windows 10 and later Windbg the command browser window  parses and displays DML.  All tags such as &lt;link&gt;, &lt;exec&gt; and appearance modifications, are fully supported.</p>
<p>To start a command browser session using the menu in WinDbg, select <b>View</b>, <b>Command Browser</b>. The .browse &lt;command&gt; in the command window will open a new command browser window and execute the given command.
For more information see <a href="command_browser_window.htm">Using the Command Browser Window in WinDbg</a>. A new command browser window can also be opened with Ctrl+N.
</p>
<p>The command browser window deliberately mimics the behavior of a web browser, with a drop-down history and previous/next buttons.  The history drop-down only displays the last twenty commands but full history is kept so by going back in the commands you can get the drop-down to display older history.</p>
<p>You can have as many command windows open at once as you like.  Command windows persist in workspaces but only save the current command; the history is not kept.</p>
<p>The WinDbg <b>View</b> menu has a <b>Set Browser Start Command</b> option which allows a user to set a preferred command for new browser windows to start with, such as .dml_start.  This command is saved in workspaces.</p>
<p>A <b>Recent Commands</b> sub-window is available on the <b>View</b> menu to hold commands of interest.  Selecting a recent command opens a new browser with the given command.  There is a menu item on the browser window’s context menu that adds the window’s current command to the list of recent commands.  The list of recent commands is persisted in workspaces.</p>
<p>The command browser window executes the command synchronously and so does not display output until the command has completed.  Long-running commands will not show anything until they have finished.</p>
<p>Links have a right-click context menu similar to the right-click context menu in a web browser.  Links can be opened in a new browser window.  A link’s command can be copied to the clipboard for use.  </p>
<p>Clicking the icon near the upper-right corner of the title bar to set the command browser windows to either auto-refresh or manual-refresh.  Auto-refresh browsers will automatically re-run their command on debugger state changes.  This keeps the output live but at the cost of executing the command on all changes.  Auto-refresh is on by default.  If the browser does not need to be live the window’s context menu can be used to disable auto-refresh.</p>
<p>Because commands are executed by the engine, not by the user interface, user-interface specific commands, such as <a href="_cls__clear_screen_.htm"><b>.cls (Clear Screen)</b></a>, will return a syntax error in when used in command browser windows.  It also means that when the user interface is a remote client, the command will be executed by the server, not by the client, and the command output will show server state.</p>
<p>Command browser windows can run any debugger command, it does not have to be a command that produces DML.  You can use browser windows to have an arbitrary set of commands active for use.  </p>
<h2><a id="Customizing_DML"></a><a id="customizing_dml"></a><a id="CUSTOMIZING_DML"></a>Customizing DML</h2>
<p></p>
<p>DML defines a small set of tags that can be included in command output. One example is the &lt;link&gt; tag. You can experiment with the &lt;link&gt; tag (and other DML tags) by using the <a href="_dml_start.htm"><b>.dml_start</b></a>  and <a href="_browse__display_command_in_browser_.htm"><b>.browse</b></a> commands. The command <b>.browse .dml_start </b><i>filepath</i> executes the commands stored in a DML file. The output is displayed in the <a href="command_browser_window.htm">Command Browser window</a> instead of the regular command window.</p>
<p>Suppose the file c:\DmlExperiment.txt contains the following lines.</p>
<div class="code"><span codelanguage=""><table>
<tr>
<th></th>
</tr>
<tr>
<td>
<pre>My DML Experiment
&lt;link cmd="lmD musb*"&gt;List modules that begin with usb.&lt;/link&gt;</pre>
</td>
</tr>
</table></span></div>
<p>The following command displays the text and link in the Command Browser window.</p>
<div class="code"><span codelanguage=""><table>
<tr>
<th></th>
</tr>
<tr>
<td>
<pre>.browse .dml_start c:\Dml_Experiment.txt</pre>
</td>
</tr>
</table></span></div><img src="images/DmlCommands03.png" alt="Screen shot of DML file output"/><p>If you click the <b>List modules that begin with usb</b> link, you see output similar to the following image.</p><img src="images/DmlCommands04.png" alt="Screen shot of module list"/><p>For a thorough discussion of DML customization and a complete list of DML tags, see <a href="customizing_debugger_output_using_dml.htm">Customizing Debugger Output Using DML</a>.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Using Debugger Markup Language%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
