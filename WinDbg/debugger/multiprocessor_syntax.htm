<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Multiprocessor Syntax"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Multiprocessor Syntax</title>

<meta name="MS-HAID" content="r13_syntax_b7eb5ea3-8cf4-420d-9461-94d4e20f38d5.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.multiprocessor_syntax"></a>Multiprocessor Syntax</h1>
</div>
<h2><a id="ddk_multiprocessor_syntax_dbg"></a><a id="DDK_MULTIPROCESSOR_SYNTAX_DBG"></a></h2>
<p>KD and kernel-mode WinDbg support multiple processor debugging. You can perform this kind of debugging on any multiprocessor platform.</p>
<p>Processors are numbered zero through <i>n</i>.</p>
<p>If the current processor is processor 0 (that is, if it is the processor that currently caused the debugger to be active), you can examine the other non-current processors (processors one through <i>n</i>). However, you cannot change anything in the non-current processors. You can only view their state.</p>
<h3><a id="selecting_a_processor"></a><a id="SELECTING_A_PROCESSOR"></a>Selecting a Processor</h3>
<p>You can use the <a href="_echocpunum__show_cpu_number_.htm"><b>.echocpunum (Show CPU Number)</b></a> command to display the processor numbers of the current processor. The output from this command enables you to immediately tell when you are working on a multiple processor system by the text in the kernel debugging prompt. </p>
<p>In the following example, <b>0:</b> in front of the <b>kd&gt;</b> prompt indicates that you are debugging the first processor in the computer.</p>
<pre class="syntax" xml:space="preserve"><code>0: kd&gt;</code></pre>
<p>Use the <a href="_s__change_current_processor_.htm"><b>~s (Change Current Processor)</b></a> command to switch between processors, as the following example shows.</p>
<pre class="syntax" xml:space="preserve"><code>0: kd&gt; ~1s
1: kd&gt;</code></pre>
<p>Now you are debugging the second processor in the computer.</p>
<p>You might have to change processors on a multiprocessor system if you encounter a break and you cannot understand the stack trace. The break might have occurred on a different processor.</p>
<h3><a id="specifying_processors_in_other_commands"></a><a id="SPECIFYING_PROCESSORS_IN_OTHER_COMMANDS"></a>Specifying Processors in Other Commands</h3>
<p>You can add a processor number before several commands. This number is <u>not</u> preceded by a tilde (<b>~</b>), except in the <b>~S</b> command.</p>
<div class="alert"><b>Note</b>    In user-mode debugging, the tilde is used to specify threads. For more information about this syntax, see <a href="thread_syntax.htm">Thread Syntax</a>.</div>
<div> </div>
<p>Processor IDs do not have to be referred to explicitly.  Instead, you can use a numerical expression that resolves to an integer that corresponds to a processor ID.  To indicate that the expression should be interpreted as a processor, use the following syntax.</p>
<pre class="syntax" xml:space="preserve"><code>||[Expression]</code></pre>
<p>In this syntax, the square brackets are required, and <i>Expression</i> stands for any numerical expression that resolves to an integer that corresponds to a processor ID.</p>
<p>In the following example, the processor changes depending on the value of a user-defined pseudo-register.</p>
<pre class="syntax" xml:space="preserve"><code>||[@$t0]</code></pre>
<h3><a id="examples"></a><a id="EXAMPLES"></a>Examples</h3>
<p>The following example uses the <a href="k__kb__kc__kd__kp__kp__kv__display_stack_backtrace_.htm"><b>k (Display Stack Backtrace)</b></a> command to display a stack trace from processor two.</p>
<pre class="syntax" xml:space="preserve"><code>1: kd&gt; 2k </code></pre>
<p>The following example uses the <a href="r__registers_.htm"><b>r (Registers)</b></a> command to display the <b>eax</b> register of processor three.</p>
<pre class="syntax" xml:space="preserve"><code>1: kd&gt; 3r eax </code></pre>
<p>However, the following command gives a syntax error, because you cannot change the state of a processor other than the current processor.</p>
<pre class="syntax" xml:space="preserve"><code>1: kd&gt; 3r eax=808080 </code></pre>
<h3><a id="breakpoints"></a><a id="BREAKPOINTS"></a>Breakpoints</h3>
<p>During kernel debugging, the <a href="bp__bu__bm__set_breakpoint_.htm"><b>bp, bu, bm (Set Breakpoint)</b></a> and <a href="ba__break_on_access_.htm"><b>ba (Break on Access)</b></a> commands apply to all processors of a multiple processor computer.</p>
<p>For example, if the current processor is three, you can enter the following command to put a breakpoint at <b>SomeAddress</b>.</p>
<pre class="syntax" xml:space="preserve"><code>1: kd&gt; bp SomeAddress </code></pre>
<p>Then, any processor (not only processor one) that executes at that address causes a breakpoint trap.</p>
<h3><a id="displaying_processor_information"></a><a id="DISPLAYING_PROCESSOR_INFORMATION"></a>Displaying Processor Information</h3>
<p>You can use the <a href="_running.htm"><b>!running</b></a> extension to display the status of each processor on the target computer. For each processor, <b>!running</b> can also display the current and next thread fields from the process control block (PRCB), the state of the 16 built-in queued spinlocks, and a stack trace.</p>
<p>You can use the <a href="_cpuinfo.htm"><b>!cpuinfo</b></a> and <a href="_cpuid.htm"><b>!cpuid</b></a> extensions to display information about the processors themselves.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Multiprocessor Syntax%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
