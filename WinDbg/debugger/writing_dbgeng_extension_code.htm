<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Writing DbgEng Extension Code"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Writing DbgEng Extension Code</title>

<meta name="MS-HAID" content="Extensions_DG_8afbe494-20c4-4b67-9f30-65ef5c9e66fd.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.writing_dbgeng_extension_code"></a>Writing DbgEng Extension Code</h1>
</div>
<h2><a id="ddk_writing_dbgeng_extension_code_dbx"></a><a id="DDK_WRITING_DBGENG_EXTENSION_CODE_DBX"></a></h2>
<p><a href="debugger_engine_and_extension_apis.htm">DbgEng extension</a> commands can include any standard C++ code. They can also include the C++ interfaces that appear in the dbgeng.h header file, in addition to the C functions that appear in the wdbgexts.h header file.</p>
<p>If you intend to use functions from wdbgexts.h, you need to define KDEXT_64BIT before wdbgexts.h is included. For example:</p>
<div class="code"><span codelanguage=""><table>
<tr>
<th></th>
</tr>
<tr>
<td>
<pre>#define KDEXT_64BIT 
#include wdbgexts.h 
#include dbgeng.h </pre>
</td>
</tr>
</table></span></div>
<p>For a full list of interfaces in dbgeng.h that can be used in an extension command, see <a href="debugger_engine_reference.htm">Debugger Engine Reference</a>.</p>
<p>For a full list of functions in wdbgexts.h that can be used in an extension command, see <a href="wdbgexts_functions.htm">WdbgExts Functions</a>. A number of these functions appear in 32-bit versions and 64-bit versions. Typically, the 64-bit versions end in "64" and the 32-bit versions have no numerical ending -- for example, <b>ReadIoSpace64</b> and <b>ReadIoSpace</b>. When calling a wdbgexts.h function from a DbgEng extension, you should always use the function name ending in "64". This is because the <a href="introduction.htm#debugger_engine">debugger engine</a> always uses 64-bit pointers internally, regardless of the target platform.</p>
<p>If you include wdbgexts.h in your DbgEng extension, you should call <a href="getwindbgextensionapis64.htm"><b>GetWindbgExtensionApis64</b></a> during the initialization of your extension DLL  (see <a href="debugextensioninitialize.htm"><i>DebugExtensionInitialize</i></a>).</p>
<div class="alert"><b>Note</b>    You must not attempt to call any DbgHelp or ImageHlp routines from any debugger extension. Calling these routines is not supported and may cause a variety of problems.</div>
<div> </div>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20Writing DbgEng Extension Code%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
