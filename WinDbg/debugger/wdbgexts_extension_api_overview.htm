<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="WdbgExts Extension API Overview"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>WdbgExts Extension API Overview</title>

<meta name="MS-HAID" content="WdbgExts_DG_0d62d2c1-688e-4694-ba56-c2c6d579d64c.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.wdbgexts_extension_api_overview"></a>WdbgExts Extension API Overview</h1>
</div>
<h2><a id="ddk_wdbgexts_extension_api_overview_dbwx"></a><a id="DDK_WDBGEXTS_EXTENSION_API_OVERVIEW_DBWX"></a></h2>
<p>Each WdbgExts extension DLL exports one or more functions that are used to implement <i>extension commands</i>. These functions are named according to the standard C convention, except that upper-case letters are not permitted.</p>
<p>The function name and the extension command name are identical, except that the extension command begins with an exclamation point ( <b>!</b> ). For example, when you load Myextension.dll into the debugger and then type <b>!stack</b> into the Debugger Command window, the debugger looks for an exported function named <b>stack</b> in Myextension.dll.</p>
<p>If Myextension.dll is not already loaded, or if there are other extension commands with the same name in other extension DLLs, you can type <b>!myextension.stack</b> into the Debugger Command window to indicate the extension DLL and the extension command in that DLL.</p>
<p>Each WdbgExts extension DLL also exports a number of <i>callback functions</i>. These functions are called by the debugger when the DLL is loaded and when extension commands are used.</p>
<p>The debugger engine will place a <b>try / except</b> block around a call to an extension DLL. This protects the engine from some types of bugs in the extension code. However, since the extension calls are executed in the same thread as the engine, they can still cause the engine to crash.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20WdbgExts Extension API Overview%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
