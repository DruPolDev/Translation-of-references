<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="The u* commands display an assembly translation of the specified program code in memory.Do not confuse this command with the ~u (Unfreeze Thread) command."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>u, ub, uu (Unassemble)</title>

<meta name="MS-HAID" content="r18_cmds_S_51dda883-e059-4b86-9406-a1f16ebd3fc1.xml"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="debugger.u__unassemble_"></a>u, ub, uu (Unassemble)</h1>
</div>
<p>The <b>u*</b> commands display an assembly translation of the specified program code in memory.</p>
<p>Do not confuse this command with the <a href="_u__unfreeze_thread_.htm"><b>~u (Unfreeze Thread)</b></a> command.</p>
<pre class="syntax">u[u|b] Range 
u[u|b] Address
u[u|b] 
</pre>
<h2><a id="ddk_cmd_unassemble_dbg"></a><a id="DDK_CMD_UNASSEMBLE_DBG"></a>Parameters</h2>
<p></p>
<dl>
<dt><a id="_______Range______"></a><a id="_______range______"></a><a id="_______RANGE______"></a>       <i>Range</i>      </dt>
<dd>
<p>Specifies the memory range that contains the instructions to disassemble. For more information about the syntax, see <a href="address_and_address_range_syntax.htm">Address and Address Range Syntax</a>. If you use the <b>b</b> flag, you must specify <i>Range</i> by using the "<i>Address </i><b>L</b><i>Length</i>" syntax, not the "<i>Address1 Address2</i>" syntax.</p>
</dd>
<dt><a id="_______Address______"></a><a id="_______address______"></a><a id="_______ADDRESS______"></a>       <i>Address</i>      </dt>
<dd>
<p>Specifies the beginning of the memory range to disassemble. Eight instructions (on an x86-based processor) or nine instructions (on an Itanium-based processor) are unassembled. For more information about the syntax, see <a href="address_and_address_range_syntax.htm">Address and Address Range Syntax</a>.</p>
</dd>
<dt><a id="_______b______"></a><a id="_______B______"></a>       <b>b</b>      </dt>
<dd>
<p>Determines the memory range to disassemble by counting backward.  If <b>ub </b><i>Address</i> is used, the disassembled range will be the eight or nine byte range ending with <i>Address</i>.  If a range is specified using the syntax <b>ub </b><i>Address</i><b> L</b><i>Length</i>, the disassembled range will be the range of the specified length ending at <i>Address</i>.</p>
</dd>
<dt><a id="_______u______"></a><a id="_______U______"></a>       <b>u</b>      </dt>
<dd>
<p>Specifies that the disassembly will continue even if there is a memory read error.</p>
</dd>
</dl>
<h3><a id="Environment"></a><a id="environment"></a><a id="ENVIRONMENT"></a>Environment</h3>
<table>
<tr>
<td>
<p><b>Modes</b></p>
</td>
<td>
<p>User mode, kernel mode</p>
</td>
</tr>
<tr>
<td>
<p><b>Targets</b></p>
</td>
<td>
<p>Live, crash dump</p>
</td>
</tr>
<tr>
<td>
<p><b>Platforms</b></p>
</td>
<td>
<p>All </p>
</td>
</tr>
</table>
<p> </p>
<h3><a id="Additional_Information"></a><a id="additional_information"></a><a id="ADDITIONAL_INFORMATION"></a>Additional Information</h3>
<p>For more information about assembly debugging and related commands, see <a href="debugging_in_assembly_mode.htm">Debugging in Assembly Mode</a>.</p>
<h2>Remarks</h2>
<p>If you do not specify a parameter for the <b>u</b> command, the disassembly begins at the current address and extends eight instructions (on an x86-based or x64-based processor) or nine instructions (on an Itanium-based processor). When you use <b>ub</b> without a parameter, the disassembly includes the eight or nine instructions before the current address.</p>
<p>Do not confuse this command with the <a href="up__unassemble_from_physical_memory_.htm"><b>up (Unassemble from Physical Memory)</b></a>.  The <b>u</b> command disassembles only virtual memory, while the <b>up</b> command disassembles only physical memory.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [debugger\debugger]:%20u, ub, uu (Unassemble)%20 RELEASE:%20(3/16/2017)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
