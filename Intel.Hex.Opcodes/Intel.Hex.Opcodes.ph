                 
                  
                   
                     
                        
                         
                                
                                 
(
)
+
+)
,
-
.
/
0
0F
1
16
2
286
3
32
386
4
486
5
7
8
808
:
=
address
AL
and
AND
AX
bit
bits
by
byte
Bytes
Carry
CF
CL
Clocks
Compare
Descriptor
dest
destination
Direction
divide
doubleword
EA
EAX
equal
Equal
Flag
flags
from
ib
if
imm
immed
in
indirect
instruction
Interrupt
interrupt
into
is
Jump
Load
m
mem
memory
Modifies
MOV
Move
Multiply
near
none
None
not
number
of
OF
operand
Operands
or
otherwise
pointer
port
privileged
r
reg
Register
register
rel
result
Rotate
segment
set
Set
SF
short
sign-extended
Size
source
specified
src
stack
Store
Subtract
the
times
to
undefined
Unsigned
Usage
value
with
word
x
Zero
ZF
|
                    
                      
                       
                          
                           
                            
                             
                                  
                                          
                                            
!=
"
",
".
&
'-'
'---
'-----
'------
'---------------'
'---------------------'
'-----------------------------'
)+
).
)|
*
**
*,
---------->
.)
.---------------.
.--|
.-.
.->|
00
01
02
03
04
05
06
07
08
09
0A
0B
0C
0D
0E
10
1023
103
104
11
118
119
12
127
128
13
14
15
167
17
175
177
18
180
19
1A
1B
1C
1D
1E
1F
20
21
22
23
24
25
255
26
27
28
29
2A
2B
2C
2D
2F
30
31
33
34
35
36
37
38
39
3A
3B
3C
3D
40
41
42
43
44
45
46
47
48
49
4A
4B
4C
4D
4E
4F
50
52
56
58
59
6
60
61
62
63
64
68
69
6A
6B
6C
6D
6E
6F
70
71
72
73
74
75
76
77
78
79
7A
7B
7C
7D
7E
7F
80
80188
80286
8086
8088
81
82
83
84
85
86
87
88
89
8A
8B
8C
8D
8E
8F
9
90
91
92
93
94
95
96
97
98
99
9A
9B
9C
9D
9E
9F
:(
:=
:[
:[(
;
<----------
<>
>
?
]
a
A
A0
A1
A2
A3
A4
A5
A6
A7
A8
A9
AA
AAA
AAD
AAM
AAS
AB
above
Above
absolute
AC
Access
access
according
accum
accumulator
across
actual
AD
ADC
ADD
add
Add
Addition
addition
Address
addressed
addresses
Adds
adjust
Adjust
Adjusted
AE
AF
after
again
against
AH
all
All
also
always
an
And
any
Architecture
are
Arithmetic
ARPL
Array
as
Ascii
ASCII
at
avoid
B0
B1
B2
B3
B4
B5
B6
B7
B8
BA
back
Bare
base
Base
based
BB
BC
BCD
BD
be
BE
before
behavior
being
below
Below
best
BF
binary
Bit
Borrow
borrow
both
Bound
BOUND
BP
BSF
BSR
BSWAP
BT
BTC
BTR
BTS
Buffer
Bus
bus
but
BX
Byte
bytes
C
C0
C1
C2
C3
C4
C5
C6
C7
C8
C9
CA
cache
Cache
caches
Calculation
call
Call
CALL
calling
can
carry
case
cause
causes
causing
cb
CBW
CC
CD
cd
CDQ
CE
changed
Changes
Check
checked
CLC
CLD
Clear
clear
cleared
clearing
Clears
CLI
Clock
clock
clocks
CLTS
CMC
CMP
CMPS
CMPSB
CMPSD
CMPSW
CMPXCHG
code
Code
combination
Compares
complement
Complement
Compliment
components
contain
contains
contents
Contents
continues
Control
control
Convert
Converts
copied
Copies
coprocessor
Corrects
count
cp
CPL
CPU
CPUs
CR
Create
CS
current
cw
CWD
CWDE
CX
Cycle
cycle
cycles
D0
D1
D2
D3
D4
D5
D7
D8
D9
DA
DAA
DAS
Data
data
DB
DC
DD
DE
Debug
debug
DEC
Decimal
decimal
decoded
decodes
Decrement
decremented
Decrements
decrements
depend
depending
DF
DI
different
digits
disable
disabled
disp
Displacement
displacement
DIV
Divide
divided
Division
division
do
Double
Doubleword
doublewords
DR
DS
due
during
dword
DX
E
E0
E1
E2
E3
E4
E5
E6
E7
E8
E9
each
early
EB
EBP
EBX
EC
ECX
ED
EDI
EDX
EE
EF
Effective
effective
EFLAGS
EM
Emulation
Enable
endian
ENTER
entry
Entry
equals
equipment
errors
ES
ESC
Escape
ESI
ESP
ET
even
Even
Event
exception
exceptions
Exchange
Exclusive
executed
execution
Exit
Extend
Extended
extended
extending
Extension
external
F
F0
F1
F2
F3
F4
F5
F6
F7
F8
F9
FA
FADD
FADDP
Family
Far
far
FB
FC
FCOM
FCOMP
FD
FDIV
FDIVP
FDIVR
FDIVRP
FE
FF
FIADD
FICOM
FICOMP
FIDIV
FIDIVR
FILD
Fill
filled
FIMUL
Find
first
FIST
FISTP
FISUB
FISUBR
flag
Flags
FLAGS
FLD
floating-point
flush
Flushes
FMUL
FMULP
FNSTSW
followed
following
For
for
format
forming
forward
Forward
found
frame
Frame
From
FS
FST
FSTP
FSTSW
FSUB
FSUBP
FSUBR
FSUBRP
FUCOM
FUCOMP
full
function
FWAIT
FXCH
gate
GDT
GDTR
general
given
Global
granular
greater
Greater
GS
h
H
Halt
hardware
have
Hex
high
higher
HLT
holds
I
id
IDIV
IDT
IDTR
IF
If
immediate
IMUL
IN
inc
INC
includes
Inclusive
Increment
increment
incremented
increments
Index
index
indexed
indicates
initiate
Input
INS
INSB
INSD
Instruction
instructions
Instructions
INSW
INT
Integer
Intel
internal
interrupts
Interrupts
INTO
Invalidate
INVD
INVLPG
IOPL
IP
IRET
iret
iretd
IRETD
it
iw
JA
JAE
JB
JBE
JC
JCXZ
JE
JECXZ
JG
JGE
JL
JLE
JMP
JNA
JNAE
JNB
JNBE
JNC
JNE
JNG
JNGE
JNL
JNLE
JNO
JNP
JNS
JNZ
JO
JP
JPE
JPO
JS
jump
jumps
Jx
Jxx
JZ
known
label
LAHF
LAR
last
LDS
LDTR
LEA
LEAVE
left
Left
LES
less
Less
lesser
Level
level
levels
LFS
LGDT
LGS
LIDT
Limit
limit
list
listed
LLDT
LMSW
loaded
loading
Loads
loads
Local
locals
located
location
LOCK
lock
Lock
LODS
LODSB
LODSD
LODSW
Logical
logical
Look-Aside
Loop
loop
LOOP
LOOPE
LOOPNE
LOOPNZ
LOOPZ
low-order
lower
LSL
LSS
LTR
machine
Machine
Make
map
maskable
masked
matching
Math
may
MHz
mnemonic
Mnemonics
mode
modifying
moffs
more
most
MOVD
MOVQ
MOVS
MOVSB
MOVSD
MOVSW
MOVSX
MOVZX
MP
MSW
MUL
multiplication
Multiplication
multiplied
multiply
must
n
n-
nanoseconds
nBytes
Near
NEG
negate
Negation
nested
new
newer
next
nibble
nj
no
No
nonmatching
NOP
NOT
Not
NT
numbers
O
occurs
Odd
odd
off
offset
on
once
one
One's
only
onto
opcodes
Opcodes
opened
operands
operation
Operation
OR
order
original
other
OUT
out
Output
OUTS
OUTSB
OUTSD
OUTSW
over
overflow
Overflow
override
packed
page
Paging
pair
parity
Parity
parm
parms
party
pattern
Pattern
PC
PE
pending
Performs
PF
PG
PL
placed
PM
point
Pointer
pointers
Pop
POP
pop
POPA
POPAD
POPF
POPFD
popped
Pops
Port
positions
Precision
prefetch
prefix
prefixes
Present
previous
priv
Privilege
privilege
Procedure
procedure
processor
processors
prot
protected
Protection
PSLLD
PSLLQ
PSLLW
PSRAD
PSRAW
PSRLD
PSRLQ
PSRLW
ptr
purpose
Push
PUSH
PUSHA
PUSHAD
pushed
Pushes
PUSHF
PUSHFD
pushing
Quad
queue
quotient
range
RCL
RCR
rd
re-entering
read
Read
readable
receives
registers
Registers
relative
remainder
REP
REPE
repeat
Repeat
Repeats
replacing
REPNE
REPNZ
REPZ
Requested
Reserved
Reset
Restore
results
RET
retf
RETF
retn
return
Return
returns
reverse
Reverse
right
Right
Rights
ROL
ROR
rotated
Rotates
RPL
rw
s
SAHF
SAL
same
SAR
save
saves
saving
SBB
scan
Scan
Scans
scans
SCAS
SCASB
SCASD
SCASW
second
see
seg
Segment
segreg
selected
Selector
selector
SETA
SETAE
SETB
SETBE
SETC
SETE
SETG
SETGE
SETL
SETLE
SETNA
SETNAE
SETNB
SETNC
SETNE
SETNG
SETNGE
SETNL
SETNLE
SETNO
SETNP
SETNS
SETNZ
SETO
SETP
SETPE
SETPO
SETS
Sets
sets
SETZ
SGDT
Shift
shifted
Shifts
shifts
SHL
SHLD
SHR
SHRD
SI
side
SIDT
sign
Sign
sign-extend
sign-extension
signal
signals
Signed
signed
significant
simplifies
Since
size
SLDT
SMSW
software
Some
SP
special
specifies
Sreg
SS
Stack
starting
State
state
status
Status
STC
STD
STI
stored
Stores
STOS
STOSB
STOSD
STOSW
STR
String
string
strings
SUB
subtraction
Subtraction
Subtracts
successful
supplied
Swap
Switched
switches
system
Table
table
task
Task
Test
TEST
tested
TF
than
that
The
their
then
third
This
this
Through
through
throughout
timing
timings
To
top
TR
Transfers
transfers
Translate
translate
Translation
Trap
TS
TSS
two
Two's
Type
Unconditional
undocumented
unmasked
unpacked
unsigned
until
updated
updates
updating
upper
use
Use
Used
used
uses
Using
Valid
valid
values
vector
vendor
Verifies
Verify
VERR
VERW
via
virtual
VM
W
Wait
WAIT
wait
WBINVD
when
whether
which
While
while
will
With
within
without
Word
words
Write
Write-Back
XADD
XCHG
XLAT
XLATB
XOR
xx
xxh
zero
zero-extension
zeroed
zeroes
|-------|-------|-------|-------|-------|
|---->|
|<----|
|<-.
¬
ó
